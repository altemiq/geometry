name: .NET Core

on:
  push:
    branches:
      - main
    paths-ignore:
      - docs/**
      - .github/workflows/docs.yml
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_MULTILEVEL_LOOKUP: false

    steps:
    - uses: actions/checkout@v5

    # Install the .NET workloads
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    # Test
    - name: Test with dotnet
      run: >
        dotnet test
        --logger GitHubActions
        /p:RunAnalyzers=false
        --
        --results-directory ${{ github.workspace }}/coverage/results
        --coverage
        --coverage-output-format cobertura

    - name: Report Generator
      uses: danielpalme/ReportGenerator-GitHub-Action@v5
      with:
        reports: ${{ github.workspace }}/coverage/results/*.cobertura.xml
        targetdir: ${{ github.workspace }}/coverage/reports
        reporttypes: HtmlInline;Cobertura;MarkdownSummaryGithub
        verbosity: Verbose

    - name: Test Results
      run: cat '${{ github.workspace }}/coverage/reports/SummaryGithub.md' >> $GITHUB_STEP_SUMMARY

    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage
        path: ${{ github.workspace }}/coverage/reports

  create-nuget:
    runs-on: ubuntu-latest

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_MULTILEVEL_LOOKUP: false
      Configuration: Release

    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0 # for versioning

    # Install the .NET workloads
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    # Release
    - name: Release with dotnet
      run: dotnet build

    # Pack
    - name: Pack with dotnet
      env:
        PackageOutputPath: ${{ github.workspace }}/nupkg
      run: dotnet pack -property:ComputeSemanticVersion=true

    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ github.workspace }}/nupkg/*.nupkg

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [ create-nuget, run-tests ]

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_MULTILEVEL_LOOKUP: false

    steps:
    - uses: actions/download-artifact@v5
      with:
        name: nuget
        path: ${{ github.workspace }}/nupkg

    - name: Push with dotnet
      id: push
      working-directory: ${{ github.workspace }}/nupkg
      run: |
        dotnet nuget push *.nupkg --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
      
    # delete-artifact
    - uses: GeekyEggo/delete-artifact@v5
      if: ${{ steps.push.conclusion == 'success' }}
      with:
        name: nuget
